# This is a basic workflow to help you get started with Actions

name: code CI&CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  continious-integration:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id : ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key : ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region : ${{secrets.AWS_REGION}}
      
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: run unit test
        run: |
          sh test/all_test.sh

      - name: if fail  # 만약 실패했을 때의 설정
        uses: actions/github-script@v3  # 커스텀 스크립트를 사용하게 해주는 액션
        with:  # 커스텀 스크립트 작성란
          github-token: $  # 깃허브 토큰으로 PR을 close시킴
          script: |
            const ref = "$"
            const pull_number = Number(ref.split("/")[2])
            await github.pulls.createReview({
              ...context.repo,
              pull_number,
              body:"테스트코드를 다시 확인해주세요. ",
              event: "REQUEST_CHANGES"
            })
            await github.pulls.update({
              ...context.repo,
              pull_number,
              state: "closed"
            })
        if: failure()  # 실패했다는 이벤트가 발생하면 바로 위의 액션 실행

  continious-deployment :
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
          --application-name test-helper \
          --deployment-group-name test-helper-codedeploy-group \
          --deployment-config-name CodeDeployDefault.OneAtATime \
          --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
